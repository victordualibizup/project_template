# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing


[tox]
envlist = test_package
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_package]
deps =
	-rtest_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands =
	pytest \
	-s \
	-vv \
	{posargs:tests/}

[testenv:train]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}

setenv =
	{[testenv:test_package]setenv}

commands=
	python3 project_template/main.py run

[testenv:typechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:mypy project_template}


[testenv:lint]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands =
	isort project_template tests
	black project_template tests
	mypy project_template
	flake8 project_template

[flake8]
exclude = .git,env
max-line-length = 90
